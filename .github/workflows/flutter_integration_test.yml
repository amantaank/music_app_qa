name: Flutter Integration Tests on iOS

on: [push, pull_request]

jobs:
  test:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.3.10'

    - name: Install dependencies
      run: flutter pub get

    - name: Run Flutter doctor
      run: flutter doctor

    - name: Set up Xcode
      run: |
        sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
        sudo xcodebuild -license accept
        sudo gem install cocoapods

    - name: Create directories for reports
      run: |
        mkdir -p integration_tests/reports
        mkdir -p integration_tests/reports/xml
        mkdir -p integration_tests/reports/html

    - name: Build iOS app for testing
      run: flutter build ios --debug --no-codesign

    - name: Reset and Boot iPhone simulator
      run: |
        xcrun simctl shutdown all
        xcrun simctl erase all
        export SIMULATOR_UDID=$(xcrun simctl create "iPhone 14" com.apple.CoreSimulator.SimDeviceType.iPhone-14)
        echo "SIMULATOR_UDID=$SIMULATOR_UDID" >> $GITHUB_ENV
        xcrun simctl boot $SIMULATOR_UDID
        xcrun simctl bootstatus $SIMULATOR_UDID

    - name: Wait for simulator to be ready
      run: sleep 20

    - name: Install app on simulator
      run: flutter install --device-id ${{ env.SIMULATOR_UDID }}

    - name: Run integration tests and generate XML reports
      run: |
        for test in integration_tests/tests/*.dart; do
          echo "Running test: $test"
          flutter drive --target=$test --driver integration_tests/driver.dart --device-id ${{ env.SIMULATOR_UDID }} --no-dds --no-build --write-results-to=integration_tests/reports/xml/$(basename $test .dart)_results.xml || true
        done

    - name: Check XML report content
      run: cat integration_tests/reports/xml/*.xml

    - name: Install Go
      run: brew install go

    - name: Install junitreport
      run: |
        export GOPATH=$HOME/go
        export PATH=$GOPATH/bin:$PATH
        go install github.com/jstemmer/go-junit-report@latest

    - name: Convert XML reports to HTML
      run: |
        export GOPATH=$HOME/go
        export PATH=$GOPATH/bin:$PATH
        for file in integration_tests/reports/xml/*.xml; do
          go-junit-report < $file > integration_tests/reports/html/$(basename $file .xml).html
        done

    - name: Upload test XML reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-xml-reports
        path: integration_tests/reports/xml

    - name: Upload test HTML reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-html-reports
        path: integration_tests/reports/html
